name: CI/CD for ChatServer Backend Service (need time to prepare environments)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  REGISTRY: <YOUR_REGISTRY>
  IMAGE_NAME: qualogo-chatserver

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build with Maven
      run: ./mvnw clean package

    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build and push Docker images
      run: |
        docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:chatserver -f docker/Dockerfile.chatserver .
        docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:mariadb -f docker/Dockerfile.mariadb .
        docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:redis -f docker/Dockerfile.redis .
        docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:nginx -f docker/Dockerfile.nginx .
        docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:chatserver
        docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:mariadb
        docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:redis
        docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:nginx

    - name: Set up Azure CLI
      uses: azure/CLI@v1

    - name: Azure CLI login
      run: az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}

    - name: Set Azure subscription
      run: az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Get AKS credentials
      run: az aks get-credentials --resource-group <YOUR_RESOURCE_GROUP> --name <YOUR_AKS_CLUSTER>

    - name: Deploy to AKS
      run: |
        kubectl apply -f k8s/chatserver-deployment.yml
        kubectl apply -f k8s/mariadb-deployment.yml
        kubectl apply -f k8s/redis-deployment.yml
        kubectl apply -f k8s/nginx-deployment.yml
